{"version":3,"sources":["App.js","index.js"],"names":["wethInterface","utils","Interface","HentaiNFT","abi","useStyles","makeStyles","theme","button","margin","spacing","App","classes","useState","contract","setContract","minting","setMinting","showMsg","setShowMsg","mintNum","setMintNum","initDapp","useCallback","provider","ethers","providers","Web3Provider","window","ethereum","send","signer","getSigner","instance","Contract","request","method","mintedSoFar","console","error","useEffect","on","networkId","parseInt","mint","quantity","publicPrice","cost","formatUnits","value","parseUnits","Number","toString","log","gasLimit","txResponse","wait","txReceipt","className","Container","src","alt","Button","variant","color","disabled","onClick","LinearProgress","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAMMA,EAAgB,IAAIC,QAAMC,UAAUC,EAAUC,KAG9CC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QA+FXC,EA3FH,WACV,IAAMC,EAAUP,IAChB,EAAgCQ,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAWC,sBAAW,gCAAC,kHAEnBC,EAAW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UAFjC,SAGnBL,EAASM,KAAK,sBAAuB,IAHlB,cAInBC,EAASP,EAASQ,UAAU,GAC5BC,EAAW,IAAIC,IApBC,6CAoB6BlC,EAAe+B,GALzC,SAMDH,OAAOC,SAASM,QAAQ,CAC9CC,OAAQ,gBAPe,aAUP,MAVO,QAWvBjB,GAAW,GAGbJ,EAAYkB,GAda,KAezBZ,EAfyB,UAeRY,EAASI,cAfD,qFAiBzBC,QAAQC,MAAR,MAjByB,0DAmB1B,IAEHC,qBAAU,WACJZ,OAAOC,UACTD,OAAOC,SAASY,GAAG,gBAAgB,SAACC,GACN,IAAxBC,SAASD,IACXvB,GAAW,GACXG,MAEAH,GAAW,GACXG,UAIL,CAACA,IAEJkB,qBAAU,WACRlB,MACC,CAACA,IAEJ,IAAMsB,EAAI,iDAAG,yHAAOC,EAAP,+BAAkB,EAC7B5B,GAAW,GADA,cAGIhB,QAHJ,SAG4Ba,EAASgC,cAHrC,0BAGHC,EAHG,KAGUC,YAHV,eAGoD,OACvDC,EAAQhD,QAAM+C,YAAY/C,QAAMiD,YAAYC,OAAOJ,GAAQF,GAAUO,WAAY,OAAQ,OAC/Fd,QAAQe,IAAIJ,GALH,UAMgBnC,EAAS8B,KAAKC,EAAU,CAACI,MAAOA,EAAOK,SAAU,OANjE,eAMHC,EANG,iBAOeA,EAAWC,OAP1B,QAOHC,EAPG,OAQTnB,QAAQe,IAAII,GACZxC,GAAW,GATF,kDAWTqB,QAAQe,IAAR,MACApC,GAAW,GAZF,0DAAH,qDAgBV,OACE,qBAAKyC,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,UACE,gCACE,qEACA,4CAAc,uBAAd,cAA8B,uBAA9B,gCACA,4BAAG,qBAAKC,IAAI,YAAYC,IAAI,iDAC5B,qDAAuB,uBAAvB,oBAA6C,uBAA7C,kBAAkEzC,EAAQgC,eACxElC,GACA,iCACE,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,SAAUjD,EAAS0C,UAAW9C,EAAQJ,OAAQ0D,QAAS,kBAAMtB,EAAK,IAA7G,oBACA,cAACkB,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,SAAUjD,EAAS0C,UAAW9C,EAAQJ,OAAQ0D,QAAS,kBAAMtB,EAAK,IAA7G,oBACA,cAACkB,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,SAAUjD,EAAS0C,UAAW9C,EAAQJ,OAAQ0D,QAAS,kBAAMtB,EAAK,KAA7G,qBACC5B,GAAW,cAACmD,EAAA,EAAD,OAGfjD,GAAY,qEACb,8BACE,mBAAGkD,KAAK,qCAAR,qBAAwD,uBACxD,mBAAGA,KAAK,0EAAR,sBAA8F,uBAC9F,mBAAGA,KAAK,+CAAR,qBAAkE,uBAClE,mBAAGA,KAAK,gCAAR,gCC9FZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8e26aa66.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport HentaiNFT from './HentaiNFT.json';\nimport { ethers, utils, Contract } from 'ethers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, LinearProgress } from '@material-ui/core';\n\nconst wethInterface = new utils.Interface(HentaiNFT.abi);\nconst wethContractAddress = '0xB21af314c5a5D64F7D84B3d9Fc5A379cd7Dd7510';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [contract, setContract] = useState(null);\n  const [minting, setMinting] = useState(false);\n  const [showMsg, setShowMsg] = useState(false);\n  const [mintNum, setMintNum] = useState(0);\n\n  const initDapp = useCallback(async () => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      const signer = provider.getSigner(0);\n      const instance = new Contract(wethContractAddress, wethInterface, signer);\n      const networkId = await window.ethereum.request({\n        method: 'net_version',\n      });\n\n      if (networkId !== '1') {\n        setShowMsg(true);\n      }\n\n      setContract(instance);\n      setMintNum(await instance.mintedSoFar());\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', (networkId) => {\n        if (parseInt(networkId) === 1) {\n          setShowMsg(false);\n          initDapp();\n        } else {\n          setShowMsg(true);\n          initDapp();\n        }\n      });\n    }\n  }, [initDapp]);\n\n  useEffect(() => {\n    initDapp();\n  }, [initDapp]);\n\n  const mint = async (quantity = 1) => {\n    setMinting(true);\n    try {\n      const cost = utils.formatUnits(await contract.publicPrice(), 'wei');\n      const value = utils.formatUnits(utils.parseUnits((Number(cost) * quantity).toString(), 'wei'), 'wei');\n      console.log(value);\n      const txResponse = await contract.mint(quantity, {value: value, gasLimit: 250000});\n      const txReceipt = await txResponse.wait();\n      console.log(txReceipt);\n      setMinting(false);\n    } catch (error) {\n      console.log(error);\n      setMinting(false);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <Container>\n        <div>\n          <h2>WELCOME ♂ TO ♀ HENTAITOWN</h2>\n          <p>No roadmap.<br/>No utility.<br/>Only PURE PLEASURE awaits.</p>\n          <p><img src=\"movie.gif\" alt=\"animation of many ahegao faces in sequence\" /></p>\n          <p>Mint cost: 0.045 ETH<br/>Total supply: 450<br/>Minted so far: {mintNum.toString()}</p>\n          {!showMsg && (\n            <form>\n              <Button variant='outlined' color='primary' disabled={minting} className={classes.button} onClick={() => mint(1)}>Mint 1</Button>\n              <Button variant='outlined' color='primary' disabled={minting} className={classes.button} onClick={() => mint(5)}>Mint 5</Button>\n              <Button variant='outlined' color='primary' disabled={minting} className={classes.button} onClick={() => mint(10)}>Mint 10</Button>\n              {minting && <LinearProgress />}\n            </form>\n            )}\n          {showMsg && (<h3>Switch to Ethereum mainnet to mint.</h3>)}\n          <p>\n            <a href=\"https://twitter.com/hentaitown_nft\">Twitter</a><br/>\n            <a href=\"https://etherscan.io/address/0xB21af314c5a5D64F7D84B3d9Fc5A379cd7Dd7510\">Contract</a><br/>\n            <a href=\"https://opensea.io/collection/hentaitown-nft\">OpenSea</a><br/>\n            <a href=\"https://discord.gg/psnMuqvf73\">Discord</a>\n          </p>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}